name: Playwright Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Check Docker Version
      run: docker --version
    - name: pull node-express-api docker image
      run: docker pull pp57/node-express-api
    - name: docker run pp57/node-express-api
      run: docker run -d -p 5000:5000 pp57/node-express-api

    - name: Install dependencies
      run: npm ci

    - name: Store Playwright's Version
      run: |
        PLAYWRIGHT_VERSION=$(npm ls @playwright/test --depth=0 | grep @playwright | sed 's/.*@//')
        echo "Playwright's Version: $PLAYWRIGHT_VERSION"
        echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

    - name: Cache Playwright Browsers for Playwright's Version
      id: cache-playwright-browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright/
        key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

    - name: Install Playwright Browsers
      if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
      run: npx playwright install --with-deps

    - name: Run Playwright tests
      run: npx playwright test
      continue-on-error: true
      env:
        BASE_URL: http://localhost:5000/

    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
